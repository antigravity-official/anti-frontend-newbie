이 프로젝트는 Typescript 언어를 사용하는 React 앱 입니다.

과제
소스코드를 분리하고 유사성격의 파일들을 폴더별로 재배치 하세요

// 파일 3개로 배치 ( 정보, get요청 커스텀훅, 인풋및 계산)

필수 수행 항목
; 1.any 를 사용하지 말고 Type을 지정해 주세요 - 1순위
; 2.컴포넌트를 분리하고, 적당한 폴더를 만들어 파일들을 배치하세요 - 2순위 
; 3.유로화를 입력할 때마다 환율을 반영하여 원화로 표시해 주세요. (exchangeEurToKrw 함수를 사용하세요, 필요시 구현내용 변경 가능) - 1순위
4.환율 정보 로딩중임을 사용자가 알 수 있도록 UI를 추가해 주세요. - 3순위
; 5.금액은 세자리 마다 콤마(,) 를 표시하세요 - 1순위
; 6.유로화는 소수점 2자리까지 표시하고, 원화는 소수점을 표시하지 않습니다. - 1순위
7.비니지스 로직을 분리하고 MVVM 구현패턴을 적용하세요. - 4순위

옵션 수행 항목
비효율적으로 작성된 코드가 있다면 변경하세요
테스트 코드를 작성하세요

제출내용
git 레포지토리를 fork하여 작성한 후 PR을 보내세요
리팩토링 의도와 구조에 대한 간략한 설명을 PR본문에 적어주세요

기타
디자인은 마음대로 변경하셔도 됩니다.
필요한 외부 라이브러리를 추가하여 사용하셔도 됩니다.
환율조회 api는 하나은행 제공 API를 사용하고 있습니다.

//any 사용하지않고 type 지정하기 ( 첫번째 수행과제 )
- interface 사용하기

// 파일 4개로 분리 ( 두번쨰 수행 과제 )
- get 요청 커스텀훅
- 기본값의 정보들
- 살때 팔때 보낼때 받을때 정보들
- 인풋창 + 가격 계산

// 유료화를 입력할 때마다 환율을 반영하여 원화로 표시 ( 세번째 수행 과제 )
- 온체인지 함수 ( 사용자 입력값 )
- 계산함수 활용하여 반영하기

// 환율 정보 로딩중임을 사용자가 알수있도록 UI를 추가 ( 네번째 수행 과제 )
- 로딩화면 만들기 ( 외부 라이브러리 사용가능 )

// 금액은 세자리 마다 콤마(,) 표시하기 ( 다섯번째 수행 과제 )
- toLocaleString함수 이용하기

// 유료화 소수점2째까지 원화 소수점없음 ( 여섯번째 수행과제 )
- toFixed 활용

// 비즈니스 로직 분리 mvvm 패턴 적용하기

// 비효율적인 코드 변경 및 테스트코드 작성

// 디자인변경 및 외부 라이브러리사용